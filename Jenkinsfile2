pipeline {
    agent any
    environment{
        NETLIFY_SITE_ID ='e736bcd4-434d-488a-9fc2-ec43a479515b'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }

    stages {

        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }
        stage('Tests'){
           parallel{
                stage('Unit Test'){
                            agent {
                                docker {
                                    image 'node:18-alpine'
                                    reuseNode true
                                }
                    }
                    
                    steps{
                        sh '''
                        test -f build/index.html
                        npm test
                        '''


                    }
                post{
                     always{
                        junit 'jest-results/junit.xml'
                        
                        }       
                    }
                }
                 
                stage('E2E'){
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }
                    
                    steps{
                        sh '''
                        npm install serve
                        node_modules/.bin/serve -s build &
                        sleep 5
                        npx playwright test
                        npx playwright test --reporter=html
                        '''
                    }
                   post{
                     always{
                       
                         publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }       
                    }    

                }
              

                }

            }
        
        stage('Deploy') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                  echo 'Small change'
                  npm install  netlify-cli@20.1.1
                  node_modules/.bin/netlify --version
                  echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                  node_modules/.bin/netlify status
                  node_modules/.bin/netlify deploy --dir=build --prod
                '''
            }
        } 
   
   
  
   
   }
  
        
}                  


